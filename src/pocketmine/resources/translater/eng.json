{
"#{Translate}":
"eng",

"#{Author}":
"PocketMine-MP Team, ClearSky Team, Aodzip, robske110",

"#{Title}":
"Main configuration file for ClearSky\n
Some of these settings are safe, others can break your server if modified incorrectly!\n
If config-update is set to true, new settings/defaults will appear automatically on this file when upgrading.",

"#{settings.language}":
"Three-letter language code for server-side localization\n
Check your language code on https://en.wikipedia.org/wiki/List_of_ISO_639-2_codes",

"#{settings.force-language}":
"Whether to send all strings translated to server locale or let the device handle them",

"#{settings.shutdown-message}":
"",

"#{settings.whitelist-message}":
"",

"#{settings.query-plugins}":
"Allow listing plugins via Query",

"#{settings.deprecated-verbose}":
"Show a console message when a plugin uses deprecated API methods",

"#{settings.enable-profiling}":
"Enable debugging of Server Lag",

"#{settings.profile-report-trigger}":
"Will only add results when tick measurement is below or equal to given value (default 20)",

"#{settings.async-workers}":
"Number of AsyncTask workers.\n
 Used for plugin asynchronous tasks, world generation, compression and web communication\n
 Set this approximately to your number of cores\n
 If set to auto, the server will try to detect the number of cores (or use 2)",

"#{settings.config-update}":
"Whether the server should try to update new configs automatically",

"#{player.inventory.slot}":
"The inventory solt a player can have",

"#{player.hunger.enable}":
"Whether hunger should be calculated or not",

"#{player.experience.enable}":
"Whether experience should be calculated or not",

"#{player.experience.player-drop}":
"Whether player should drop experience or not",

"#{player.experience.mob-drop}":
"Whether mobs should drop experience or not",

"#{player.experience.break-drop}":
"Whether blocks should drop experience or not",

"#{player.experience.smelt-drop}":
"Whether furncace melting should give experience or not",

"#{redstone}":
"Whether redstone should be calculated or not",

"#{redstone.enable}":
"Redstone calculation limit (per tick)",

"#{redstone.tick-limit}":
"",

"#{I/O}":
"These settings do enormly affect disk or console performance!",

"#{I/O.title-usage}":
"Show server usage in title",

"#{I/O.log-to-file}":
"Log console to file(server.log)",

"#{memory.global-limit}":
"MB\n
 Global soft memory limit. Set to 0 to disable\n
 This will trigger low-memory-triggers and fire an event to free memory when the usage goes over this",

"#{memory.main-limit}":
"MB\n
 Main thread soft memory limit in. Set to 0 to disable\n
 This will trigger low-memory-triggers and fire an event to free memory when the usage goes over this",

"#{memory.main-hard-limit}":
"MB\n
 Main thread hard memory limit in megabytes. Set to 0 to disable\n
 This will stop the server when the limit is surpassed",

"#{memory.check-rate}":
"ticks\n
 Period in ticks to check memory",

"#{memory.continuous-trigger}":
"Continue firing low-memory-triggers and event while on low memory",

"#{memory.continuous-trigger-rate}":
"secounds\n
 Only if memory.continuous-trigger is enabled. Specifies the rate in memory.check-rate steps",

"#{garbage-collection.period}":
"Period in ticks to fire the garbage collector manually (default 30 minutes), set to 0 to disable\n
 This only affect the main thread. Other threads should fire their own collections",

"#{garbage-collection.collect-async-worker}":
"Fire asynchronous tasks to collect garbage from workers",

"#{garbage-collection.low-memory-trigger}":
"Trigger on low memory",

"#{max-chunks.trigger-limit}":
"Limit of chunks to load per player, overrides chunk-sending.max-chunks",

"#{max-chunks.trigger-chunk-collect}":
"Do chunk garbage collection on trigger",

"#{max-chunks.low-memory-trigger}":
"Trigger on low memory",

"#{world-caches.disable-chunk-cache}":
"",

"#{world-caches.low-memory-trigger}":
"",

"#{network.batch-threshold}":
"bytes\n
 Threshold for batching packets. Only these packets will be compressed\n
 Set to 0 to compress everything, -1 to disable.",

"#{network.compression-level}":
"Compression level used when sending batched packets. Higher = more CPU, less bandwidth usage",

"#{network.async-compression}":
"Use AsyncTasks for compression. Adds half/one tick delay, less CPU load on main thread",

"#{network.anti-cheat}":
"Prevent cheating , but consider turn it off when have a bad network connection",

"#{network.acceptable-packetlost}":
"If your server have a bad network connection , increase this",

"#{network.timeout}":
"second\n
 Interrupt Raklib after reach timeout , save CPU usage , may cause packet lost.(-1 for disable , all pkt will send)",

"#{network.protocol}":
"MCPE Protocol Version , it will affect the color of version string.",

"#{network.version}":
"MCPE Version string shown in server list , number and dot(.) allowed",

"#{network.upnp-forwarding}":
"Experimental, only for Windows. Tries to use UPnP to automatically port forward",

"#{debug.level}":
"",

"#{debug.allow-xdebug}":
"Whether to allow the php-extension xdebug",

"#{debug.commands}":
"Enables /status, /gc",

"#{level-settings.default-format}":
"The default format that levels will use when created",

"#{level-settings.convert-format}":
"WIP",

"#{level-settings.auto-tick-rate}":
"Automatically change levels tick rate to maintain 20 ticks per second",

"#{level-settings.auto-tick-rate-limit}":
"",

"#{level-settings.base-tick-rate}":
"(1 = 20 ticks per second, 2 = 10 ticks per second, etc.)\n
 Sets the base tick rate",

"#{level-settings.always-tick-players}":
"Tick all players each tick even when other settings disallow this.",

"#{level-settings.weather.enable}":
"Whether weather should be calculated or not",

"#{level-settings.weather.rain}":
"Chance in % per tick to start rain",

"#{level-settings.weather.rain.time}":
"",

"#{level-settings.weather.rain.rainfall}":
"",

"#{chunk-sending.per-tick}":
"Limit of chunks to send per tick to player",

"#{chunk-sending.max-chunks}":
"Limit of chunks to send per player",

"#{chunk-sending.spawn-threshold}":
"Chunks, that have to be loaded before the player spawns",

"#{chunk-sending.cache-chunks}":
"Save a serialized copy of the chunk in memory for faster sending\n
 Useful in mostly-static worlds where lots of players join at the same time",

"#{chunk-sending.chunk-radius}":
"How many chunks around a player should load",

"#{chunk-ticking.per-tick}":
"Max amount of chunks processed each tick",

"#{chunk-ticking.tick-radius}":
"Radius of chunks around a player to tick",

"#{chunk-ticking.light-updates}":
"Whether to do light-updates or not",

"#{chunk-ticking.clear-tick-list}":
"",

"#{chunk-generation.queue-size}":
"Max. amount of chunks in the waiting queue to be generated",

"#{chunk-generation.population-queue-size}":
"Max. amount of chunks in the waiting queue to be populated",

"#{ticks-per.animal-spawns}":
"",

"#{ticks-per.monster-spawns}":
"",

"#{ticks-per.autosave}":
"",

"#{ticks-per.cache-cleanup}":
"",

"#{spawn-limits.monsters}":
"",

"#{spawn-limits.animals}":
"",

"#{spawn-limits.water-animals}":
"",

"#{spawn-limits.ambient}":
"",

"#{aliases}":
"Examples:\n
 showtheversion: version\n
 savestop: [save-all, stop]",

"#{worlds}":
"These settings will override the generator set in server.properties and allows loading multiple levels\n
 Example:\n
 world:\n
  seed: 404\n
  generator: FLAT:2;7,59x1,3x3,2;1;decoration(treecount=80 grasscount=45)",

"#{StopEdit}":
"!STOP EDIT! settings below is used for internal use"
}